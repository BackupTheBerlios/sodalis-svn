baseenv=Environment(CPPPATH=[".","commands","../kaneutil2"])
env=baseenv.Copy(
	CCFLAGS="-Wall"
	)

mode=ARGUMENTS.get("mode","debug")
if mode=="debug":
	env.Append(CCFLAGS=" -g -DDEBUG")
	debug=ARGUMENTS.get("debug","memory,net,func,log")
	if "memory" in debug:
		env.Append(CCFLAGS=" -DDEBUG_MEMORY")
	if "net" in debug:
		env.Append(CCFLAGS=" -DLOG_NET")
	if "func" in debug:
		env.Append(CCFLAGS=" -DDEBUG_FUNC")
	if "log" in debug:
		env.Append(CCFLAGS=" -DDEBUG_LOG")
elif mode=="release":
	env.Append(CCFLAGS=" -O3")
	debug=""
else:
	print "Invalid mode ( debug|release )"
	sys.exit()

sources = Split("""
	scc.c
	ability.c
	network.c
	parse.c
	
	commands/msg.c
	commands/list.c
	commands/show.c
	commands/delete.c
	commands/send.c
	""")

libs = Split("""
	ku2
	""")

libpaths = Split("""
	../kaneutil2
	""")

SConscript("../kaneutil2/SConstruct")
Default(env.Program("scc",sources,LIBS=libs,LIBPATH=libpaths))
