#
#	SConstruct file for Sodalis Project client library
#
#	Fri Apr  7 17:10:15 2006
#		J. Anton, Copyright 2006
#

import sys

Help("""
Build the library: 'scons prefix=... mode=... debug=...`
Clear the built library: 'scons -c`
Install the library: 'scons install prefix=... mode=... debug...`
	WARNING: library might be rebuilt firstly

========
Install prefix: path, where the library will be installed; default: /usr/local

Build mode: debug|release; default: debug
	'debug`: build debug version, debug mode can be set
	'release`: build the release version, debug mode setting will not be used
	
Debug mode: memory,net,db,func,log; default: all of them
	'memory`: watch memory allocations
	'net`: log all network messages
	'func`: watch all function calls (entry and exit points)
	""")

baseenv=Environment(CPPPATH=[".","../kaneutil2"])
env=baseenv.Copy(
	CCFLAGS="-Wall"
	)

mode=ARGUMENTS.get("mode","debug")
if mode=="debug":
	env.Append(CCFLAGS=" -g -DDEBUG")
	debug=ARGUMENTS.get("debug","memory,net,func")
	if "memory" in debug:
		env.Append(CCFLAGS=" -DDEBUG_MEMORY")
	if "net" in debug:
		env.Append(CCFLAGS=" -DLOG_NET")
	if "func" in debug:
		env.Append(CCFLAGS=" -DDEBUG_FUNC")
elif mode=="release":
	env.Append(CCFLAGS=" -O3")
	debug=""
else:
	print "Invalid mode ( debug|release )"
	sys.exit()

prefix=ARGUMENTS.get("prefix","/usr/local")
env.Append(CCFLAGS=" -DPREFIX="+prefix)

sources = Split("""
	photos/photos.c
	admin/admin.c
	messages/messages.c
	main/parser.c
	main/ecode.c
	main/network.c
	main/libmain.c
	friends/friends.c
	lists/lists.c
	""")

libs = Split("""
	ku2
	""")

libpaths = Split("""
	../kaneutil2
	""")

sodalis_flags=env["CCFLAGS"]

libsodalis=env.SharedLibrary("sodalis",sources,LIBS=libs,LIBPATH=libpaths)
Default(libsodalis)

env.Alias("installlibrary",prefix)
env.Install(
	prefix+"/lib/",
	libsodalis)
